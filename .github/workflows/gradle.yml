# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "*" ]

jobs:
  check-code-format:
    runs-on: ubuntu-latest
    steps:
      # 코드 체크  아웃
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Code Format Check with naver-checkstyle
        run: ./gradlew checkstyleMain

  test:
    runs-on: ubuntu-latest
    steps:
      # 코드 체크  아웃
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      # 테스트는 전부 성공해야 통과
      - name: Build with Gradle
        run: ./gradlew clean build -x test -x checkstyleTest -x checkstyleMain

      - name: Test with Gradle
        run: SPRING_PROFILES_ACTIVE=[test] ./gradlew test

      # 테스트 후 결과 확인
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml
        
